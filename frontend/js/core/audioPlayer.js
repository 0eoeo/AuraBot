const {
  joinVoiceChannel,
  createAudioPlayer,
  createAudioResource,
  AudioPlayerStatus,
  StreamType
} = require('@discordjs/voice');

const play = require('play-dl');

async function playMusicInVoiceChannel(url, interaction) {
  const voiceChannel = interaction.member.voice.channel;

  if (!voiceChannel) {
    return interaction.reply('‚ùå –¢—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ, —á—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å –º—É–∑—ã–∫—É!');
  }

  const connection = joinVoiceChannel({
    channelId: voiceChannel.id,
    guildId: voiceChannel.guild.id,
    adapterCreator: voiceChannel.guild.voiceAdapterCreator,
  });

  const player = createAudioPlayer();

  connection.subscribe(player);

  try {
    // –ü–æ–ª—É—á–∞–µ–º –∞—É–¥–∏–æ-–ø–æ—Ç–æ–∫ —Å YouTube
    const stream = await play.stream(url);

    const resource = createAudioResource(stream.stream, {
      inputType: stream.type,
    });

    player.play(resource);

    player.on(AudioPlayerStatus.Playing, () => {
      interaction.reply(`üé∂ –°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç: ${url}`);
    });

    player.on(AudioPlayerStatus.Idle, () => {
      connection.destroy();
    });

    player.on('error', error => {
      console.error('–û—à–∏–±–∫–∞ –∞—É–¥–∏–æ-–ø–ª–µ–µ—Ä–∞:', error);
      interaction.channel.send('‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –º—É–∑—ã–∫–∏.');
      connection.destroy();
    });

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–∏:', error);
    interaction.reply('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –∞—É–¥–∏–æ.');
    connection.destroy();
  }
}

module.exports = { playMusicInVoiceChannel };
