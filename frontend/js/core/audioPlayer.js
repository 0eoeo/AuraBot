const { joinVoiceChannel, createAudioPlayer, createAudioResource, AudioPlayerStatus } = require('@discordjs/voice');
const play = require('play-dl');
const fs = require('fs');

// ‚úÖ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ Netscape cookie –≤ —Å—Ç—Ä–æ–∫—É –¥–ª—è play-dl
function parseCookiesFromNetscapeFile(filePath) {
  const cookieLines = fs.readFileSync(filePath, 'utf8').split('\n');
  const cookies = cookieLines
    .filter(line => line && !line.startsWith('#'))
    .map(line => {
      const parts = line.split('\t');
      if (parts.length < 7) return null;
      const name = parts[5];
      const value = parts[6];
      return `${name}=${value}`;
    })
    .filter(Boolean); // —É–¥–∞–ª–∏—Ç—å null
  return cookies.join('; ');
}

// ‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ cookie –¢–û–õ–¨–ö–û –û–î–ò–ù –†–ê–ó –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
const COOKIE_PATH = './cookies.txt';

(async () => {
  try {
    const cookieString = parseCookiesFromNetscapeFile(COOKIE_PATH);
    await play.setToken({
      youtube: {
        cookie: cookieString
      }
    });
    console.log('‚úÖ Cookies —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è YouTube');
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ cookies:', err);
  }
})();

// üéµ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –º—É–∑—ã–∫–∏
async function playMusicInVoiceChannel(url, interaction) {
  const voiceChannel = interaction.member?.voice?.channel;

  if (!voiceChannel) {
    return interaction.reply('‚ùå –¢—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!');
  }

  const connection = joinVoiceChannel({
    channelId: voiceChannel.id,
    guildId: voiceChannel.guild.id,
    adapterCreator: voiceChannel.guild.voiceAdapterCreator,
  });

  const player = createAudioPlayer();
  connection.subscribe(player);

  try {
    const stream = await play.stream(url); // ‚ö†Ô∏è –º–æ–∂–µ—Ç –≤—ã–±—Ä–æ—Å–∏—Ç—å –æ—à–∏–±–∫—É –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–µ —Å cookie
    const resource = createAudioResource(stream.stream, {
      inputType: stream.type,
    });

    player.play(resource);

    player.once(AudioPlayerStatus.Playing, () => {
      interaction.reply(`üé∂ –°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç: ${url}`);
    });

    player.once(AudioPlayerStatus.Idle, () => {
      connection.destroy();
    });

    player.on('error', (error) => {
      console.error('–û—à–∏–±–∫–∞ –∞—É–¥–∏–æ:', error);
      interaction.channel.send('‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∞—É–¥–∏–æ.');
      connection.destroy();
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:', error);
    connection.destroy();
    interaction.reply('‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è. –í–∏–¥–µ–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –∏–ª–∏ –∑–∞—â–∏—â–µ–Ω–æ.');
  }
}

module.exports = { playMusicInVoiceChannel };
