const { joinVoiceChannel, createAudioPlayer, createAudioResource, AudioPlayerStatus } = require('@discordjs/voice');
const ytdlp = require('yt-dlp-exec');
const path = require('path');

async function playMusicInVoiceChannel(url, interaction) {
  const voiceChannel = interaction.member?.voice?.channel;

  if (!voiceChannel) {
    return interaction.reply('‚ùå –¢—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!');
  }

  const connection = joinVoiceChannel({
    channelId: voiceChannel.id,
    guildId: voiceChannel.guild.id,
    adapterCreator: voiceChannel.guild.voiceAdapterCreator,
  });

  const player = createAudioPlayer();
  connection.subscribe(player);

  try {
    // –ó–∞–ø—É—Å–∫–∞–µ–º yt-dlp-exec –∏ –ø–æ–ª—É—á–∞–µ–º stdout –∫–∞–∫ –ø–æ—Ç–æ–∫
    const process = ytdlp.raw(
      url,
      {
        format: 'bestaudio',
        output: '-',
        quiet: true,
        noWarnings: true,
        cookies: path.join(__dirname, 'cookies.txt'),
      },
      { stdio: ['ignore', 'pipe', 'ignore'] }
    );

    const resource = createAudioResource(process.stdout, {
      inputType: 'arbitrary',
    });

    player.play(resource);

    player.once(AudioPlayerStatus.Playing, () => {
      interaction.reply(`üé∂ –°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç: ${url}`);
    });

    player.once(AudioPlayerStatus.Idle, () => {
      connection.destroy();
    });

    player.on('error', (error) => {
      console.error('–û—à–∏–±–∫–∞ –∞—É–¥–∏–æ:', error);
      interaction.channel.send('‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∞—É–¥–∏–æ.');
      connection.destroy();
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:', error);
    connection.destroy();
    interaction.reply('‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è. –í–∏–¥–µ–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –∏–ª–∏ –∑–∞—â–∏—â–µ–Ω–æ.');
  }
}

module.exports = { playMusicInVoiceChannel };
