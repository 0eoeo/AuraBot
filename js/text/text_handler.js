const axios = require('axios');

async function handleTextMessage(message, playbackQueue, isPlaying, playNext) {
  if (message.author.bot) return;
  if (message.channel.name !== "–≥–µ—Ä—Ç–∞") return;

  const speaker = Buffer.from(message.member.displayName, 'utf-8').toString('base64');
  const text = message.content;

  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç API (/reply)
    const replyResponse = await axios.post('http://localhost:8000/reply', {
      speaker: message.member.displayName,
      text
    }, {
      headers: { 'Content-Type': 'application/json' }
    });

    const replyText = replyResponse.data?.text?.trim();

    if (!replyText) {
      await message.reply("ü§ñ –ë–æ—Ç –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª.");
      return;
    }

    console.log("‚úÖ –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞:", replyText);
    await message.reply(`**–û—Ç–≤–µ—Ç:** ${replyText}`);  // <-- –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º: –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –±–æ—Ç –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ
    const botVoiceChannel = message.guild.members.me.voice.channel;

    if (!botVoiceChannel) {
      console.log("üéß –ë–æ—Ç –Ω–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ.");
      return;  // —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
    }

    // 3. –ü–æ–ª—É—á–∞–µ–º –æ–∑–≤—É—á–∫—É –æ—Ç /voice
    const voiceResponse = await axios.post('http://localhost:8000/voice', {
      text: replyText
    }, {
      responseType: 'stream',
      headers: { 'Content-Type': 'application/json' }
    });

    playbackQueue.push({ stream: voiceResponse.data, text: replyText });
    if (!isPlaying) playNext();

  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ API:', err.message);
    await message.reply("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API.");
  }
}

module.exports = handleTextMessage;
